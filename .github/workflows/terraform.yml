name: Terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

permissions:
  id-token: write
  contents: read
  pull-requests: write
  issues: write

jobs:
  terraform:
    name: Terraform Playground
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # https://docs.github.com/ja/actions/security-for-github-actions/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::998141369043:role/admin-github-actions-role
          aws-region: ap-northeast-1

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.7"

      - name: Terraform fmt
        run: terraform fmt -recursive -check
        working-directory: terraform/global-tfstate

      - name: Terraform init
        run: terraform init -backend-config=./backend_config.hcl
        working-directory: terraform/global-tfstate

      - name: Terraform validate
        run: terraform validate
        working-directory: terraform/global-tfstate

      - name: Terraform plan
        if: github.event_name == 'pull_request'
        run: terraform plan -out=tfplan
        continue-on-error: true
        working-directory: terraform/global-tfstate

      - name: Terraform show
        id: terraform_show
        if: github.event_name == 'pull_request'
        run: terraform show -no-color tfplan > plan.txt
        working-directory: terraform/global-tfstate

      - name: Update PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        id: plan-comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('terraform/global-tfstate/plan.txt', 'utf8');
            const output = `#### Terraform Plan Output
            \`\`\`
            ${planOutput}
            \`\`\``;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' && comment.body.includes('Terraform Plan Output')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            }

      - name: Terraform apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        continue-on-error: true
        working-directory: terraform/global-tfstate
